name: SCV API Tests

on:
  push:
    branches: [ "master", "staging" ]
  pull_request:
    branches: [ "master", "staging" ]

jobs:

  test:
    runs-on: ubuntu-latest

    steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Checkout code
      uses: actions/checkout@v4
  
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build the Docker image for testing
      run: docker build . --file Dockerfile --tag scv:latest

    - name: Run pytest
      run: docker run scv:latest /bin/sh -c "pytest --cov=. && coverage xml -i"

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage.xml

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Checkout code
      uses: actions/checkout@v4
  
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build and push backend Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        platforms: linux/amd64,linux/arm64
        file: ./Dockerfile
        tags: ${{ vars.DOCKERHUB_USERNAME }}/scv-backend:latest

    - name: Build and push frontend Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        platforms: linux/amd64,linux/arm64
        file: ./nginx/Dockerfile
        tags: ${{ vars.DOCKERHUB_USERNAME }}/scv-frontend:latest
